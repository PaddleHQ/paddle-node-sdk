/**
 *  ! Autogenerated code !
 *  Do not make changes to this file.
 *  Changes may be overwritten as part of auto-generation.
 */

import {
  type AdjustmentActionType,
  type AdjustmentAction,
  type AdjustmentStatus,
  type CurrencyCode,
} from '../../../enums/index.js';
import { AdjustmentItemNotification } from './adjustment-item-notification.js';
import { PayoutTotalsAdjustmentNotification, TotalAdjustmentsNotification } from '../shared/index.js';
import { type IAdjustmentNotificationResponse } from '../../types/index.js';

export class AdjustmentNotification {
  public readonly id: string;
  public readonly action: AdjustmentAction;
  public readonly type: AdjustmentActionType;
  public readonly transactionId: string;
  public readonly subscriptionId: string | null;
  public readonly customerId: string;
  public readonly reason: string;
  public readonly creditAppliedToBalance: boolean;
  public readonly currencyCode: CurrencyCode;
  public readonly status: AdjustmentStatus;
  public readonly items: AdjustmentItemNotification[];
  public readonly totals: TotalAdjustmentsNotification;
  public readonly payoutTotals: PayoutTotalsAdjustmentNotification | null;
  public readonly createdAt: string;
  public readonly updatedAt: string;

  constructor(adjustment: IAdjustmentNotificationResponse) {
    this.id = adjustment.id;
    this.action = adjustment.action;
    this.type = adjustment.type;
    this.transactionId = adjustment.transaction_id;
    this.subscriptionId = adjustment.subscription_id ? adjustment.subscription_id : null;
    this.customerId = adjustment.customer_id;
    this.reason = adjustment.reason;
    this.creditAppliedToBalance = adjustment.credit_applied_to_balance;
    this.currencyCode = adjustment.currency_code;
    this.status = adjustment.status;
    this.items = adjustment.items.map((item) => new AdjustmentItemNotification(item));
    this.totals = new TotalAdjustmentsNotification(adjustment.totals);
    this.payoutTotals = adjustment.payout_totals
      ? new PayoutTotalsAdjustmentNotification(adjustment.payout_totals)
      : null;
    this.createdAt = adjustment.created_at;
    this.updatedAt = adjustment.updated_at;
  }
}
