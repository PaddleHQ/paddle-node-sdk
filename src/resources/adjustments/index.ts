/**
 *  ! Autogenerated code !
 *  Do not make changes to this file.
 *  Changes may be overwritten as part of auto-generation.
 */

import { Adjustment, AdjustmentCollection, AdjustmentCreditNotePDF } from '../../entities';
import { type ErrorResponse, type Response } from '../../internal';
import { BaseResource, PathParameters, QueryParameters } from '../../internal/base';
import {
  type CreateAdjustmentRequestBody,
  type ListAdjustmentQueryParameters,
  type GetAdjustmentCreditNoteQueryParameters,
} from './operations';
import { type IAdjustmentResponse } from '../../types';

const AdjustmentPaths = {
  list: '/adjustments',
  create: '/adjustments',
  getCreditNotePDF: '/adjustments/{adjustment_id}/credit-note',
} as const;

export * from './operations';

export class AdjustmentsResource extends BaseResource {
  public list(queryParams?: ListAdjustmentQueryParameters): AdjustmentCollection {
    const queryParameters = new QueryParameters(queryParams);
    return new AdjustmentCollection(this.client, AdjustmentPaths.list + queryParameters.toQueryString());
  }

  public async create(createAdjustmentParameters: CreateAdjustmentRequestBody): Promise<Adjustment> {
    const response = await this.client.post<CreateAdjustmentRequestBody, Response<IAdjustmentResponse> | ErrorResponse>(
      AdjustmentPaths.create,
      createAdjustmentParameters,
    );

    const data = this.handleResponse<IAdjustmentResponse>(response);

    return new Adjustment(data);
  }

  public async getCreditNotePDF(
    adjustmentId: string,
    queryParams?: GetAdjustmentCreditNoteQueryParameters,
  ): Promise<AdjustmentCreditNotePDF> {
    const urlWithPathParams = new PathParameters(AdjustmentPaths.getCreditNotePDF, {
      adjustment_id: adjustmentId,
    }).deriveUrl();

    const queryParameters = new QueryParameters(queryParams);

    const response = await this.client.get<undefined, Response<AdjustmentCreditNotePDF> | ErrorResponse>(
      urlWithPathParams + queryParameters.toQueryString(),
    );

    const data = this.handleResponse<AdjustmentCreditNotePDF>(response);

    return new AdjustmentCreditNotePDF(data);
  }
}
