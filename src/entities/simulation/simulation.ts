/**
 *  ! Autogenerated code !
 *  Do not make changes to this file.
 *  Changes may be overwritten as part of auto-generation.
 */

import { type ISimulationResponse } from '../../types';
import type { SimulationEventType, Status } from '../../enums';
import type { EventMap, IEventName } from '../../notifications';

export class Simulation<T extends SimulationEventType | undefined = undefined> {
  public readonly id: string;
  public readonly status: Status;
  public readonly notificationSettingId: string;
  public readonly name: string;
  public readonly type: T;
  public readonly payload: (T extends IEventName ? EventMap[T] : null) | null;
  public readonly lastRunAt: string | null;
  public readonly createdAt: string;
  public readonly updatedAt: string;

  constructor(simulationResponse: ISimulationResponse<T>) {
    this.id = simulationResponse.id;
    this.status = simulationResponse.status;
    this.notificationSettingId = simulationResponse.notification_setting_id;
    this.name = simulationResponse.name;
    this.type = simulationResponse.type;
    this.payload = simulationResponse.payload ?? null;
    this.lastRunAt = simulationResponse.last_run_at ?? null;
    this.createdAt = simulationResponse.created_at;
    this.updatedAt = simulationResponse.updated_at;
  }
}
