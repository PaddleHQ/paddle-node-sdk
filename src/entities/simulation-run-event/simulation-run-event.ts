/**
 *  ! Autogenerated code !
 *  Do not make changes to this file.
 *  Changes may be overwritten as part of auto-generation.
 */

import type { SimulationRunEventStatus, SimulationScenarioType } from '../../enums/index.js';
import type { IEventName } from '../../notifications/index.js';
import { type ISimulationRunEventResponse } from '../../types/index.js';
import { SimulationEventRequest, SimulationEventResponse } from '../shared/index.js';

export class SimulationRunEvent {
  public readonly id: string;
  public readonly status: SimulationRunEventStatus;
  public readonly eventType: IEventName | SimulationScenarioType;
  // eslint-disable-next-line @typescript-eslint/no-explicit-any -- Payload is a generic object that can be any type
  public readonly payload: any;
  public readonly request: SimulationEventRequest | null;
  public readonly response: SimulationEventResponse | null;
  public readonly createdAt: string;
  public readonly updatedAt: string;

  constructor(simulationRunEventResponse: ISimulationRunEventResponse) {
    this.id = simulationRunEventResponse.id;
    this.status = simulationRunEventResponse.status;
    this.eventType = simulationRunEventResponse.event_type;
    this.payload = simulationRunEventResponse.payload;
    this.request = simulationRunEventResponse.request
      ? new SimulationEventRequest(simulationRunEventResponse.request)
      : null;
    this.response = simulationRunEventResponse.response
      ? new SimulationEventResponse(simulationRunEventResponse.response)
      : null;
    this.createdAt = simulationRunEventResponse.created_at;
    this.updatedAt = simulationRunEventResponse.updated_at;
  }
}
